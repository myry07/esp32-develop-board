[1/13] Linking C static library esp-idf/mqtt/libmqtt.a
[2/13] Linking C static library esp-idf/spiffs/libspiffs.a
[3/13] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/010_Partiton/003_spiffs/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.2_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/010_Partiton/003_spiffs/build/bootloader/bootloader.bin
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[4/13] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[5/13] No install step for 'bootloader'
[6/13] Completed 'bootloader'
[7/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/003_spiffs.c.obj
[8/13] Linking C static library esp-idf/main/libmain.a
[9/13] Generating ld/sections.ld
[10/13] Linking CXX executable 003_spiffs.elf
[11/13] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/010_Partiton/003_spiffs/build/003_spiffs.bin
[12/13] cd /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/010_Partiton/003_spiffs/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.2_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/010_Partiton/003_spiffs/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/010_Partiton/003_spiffs/build/003_spiffs.bin
003_spiffs.bin binary size 0x33d20 bytes. Smallest app partition is 0x100000 bytes. 0xcc2e0 bytes (80%) free.
[12/13] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.2_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/010_Partiton/003_spiffs/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-130 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 003_spiffs.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbserial-130
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a8:42:e3:ae:d2:30
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00043fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26800 bytes to 16424...
Writing at 0x00001000... (50 %)
Writing at 0x00007891... (100 %)
Wrote 26800 bytes (16424 compressed) at 0x00001000 in 0.8 seconds (effective 271.0 kbit/s)...
Hash of data verified.
Compressed 212256 bytes to 117505...
Writing at 0x00010000... (12 %)
Writing at 0x0001c9a4... (25 %)
Writing at 0x000223d0... (37 %)
Writing at 0x00027f9d... (50 %)
Writing at 0x0002dbb3... (62 %)
Writing at 0x00035455... (75 %)
Writing at 0x0003c7b8... (87 %)
Writing at 0x00042a37... (100 %)
Wrote 212256 bytes (117505 compressed) at 0x00010000 in 3.1 seconds (effective 543.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 117...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (117 compressed) at 0x00008000 in 0.1 seconds (effective 452.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
