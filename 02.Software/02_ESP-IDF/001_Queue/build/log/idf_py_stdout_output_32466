[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/001_Queue/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.2_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/001_Queue/build/bootloader/bootloader.bin
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/001_Queue.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable 001_Queue.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/001_Queue/build/001_Queue.bin
[9/10] cd /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/001_Queue/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.2_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/001_Queue/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/001_Queue/build/001_Queue.bin
001_Queue.bin binary size 0x2b670 bytes. Smallest app partition is 0x100000 bytes. 0xd4990 bytes (83%) free.
[9/10] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.2_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/esp32-develop-board/02.Software/02_ESP-IDF/001_Queue/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-110 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 001_Queue.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbserial-110
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: a8:42:e3:ae:d2:30
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26800 bytes to 16415...
Writing at 0x00001000... (50 %)
Writing at 0x00007899... (100 %)
Wrote 26800 bytes (16415 compressed) at 0x00001000 in 0.8 seconds (effective 270.7 kbit/s)...
Hash of data verified.
Compressed 177776 bytes to 95284...
Writing at 0x00010000... (16 %)
Writing at 0x0001c2c6... (33 %)
Writing at 0x00021cfd... (50 %)
Writing at 0x000275d9... (66 %)
Writing at 0x0002ed74... (83 %)
Writing at 0x000360bf... (100 %)
Wrote 177776 bytes (95284 compressed) at 0x00010000 in 2.9 seconds (effective 494.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 378.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
